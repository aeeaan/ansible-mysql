---
- name: Start the mysql services
  service: name={{ mysql_service }} state=started enabled=yes
  tags:
    - mysql
    - configuration
    - services

- name: get root password
  shell: "grep 'A temporary password is generated for root@localhost' /var/log/mysqld.log | awk -F ' ' '{print $(NF)}' | tail -1"
  when: mysql_flavor == 'mysql-community' and mysql_version|float > 5.6 and mysqld_installed is defined and mysqld_installed.changed
  register: mysql_auto_password
  tags:
    - mysql
    - configuration

# get auto generated pass
- name: root user password
  command: mysql --user root --password={{ mysql_auto_password.stdout }} --connect-expired-password --execute="ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysql_root_password }}'";
  when: mysql_flavor == 'mysql-community' and mysql_version|float > 5.6 and mysqld_installed is defined and mysqld_installed.changed
  register: mysql_password_set
  tags:
    - mysql
    - configuration

- name: set up root user
  mysql_user: name={{ mysql_root_user}} host={{ item }} password={{ mysql_root_password }} login_password="{{ mysql_root_password }}" priv=*.*:ALL,GRANT state=present
  when: mysql_password_set.changed
  with_items:
   - 127.0.0.1
   - ::1
   - localhost
  tags:
    - mysql
    - configuration

- name: set up root user
  mysql_user: name={{ mysql_root_user}} host={{ item }} password={{ mysql_root_password }} priv=*.*:ALL,GRANT state=present
  when: !mysql_password_set.changed
  with_items:
   - 127.0.0.1
   - ::1
   - localhost
  tags:
    - mysql
    - configuration

- name: setup system user for root login
  template: src=client.my.cnf.j2 dest=~/.my.cnf mode=0600
  tags:
    - mysql
    - configuration

- name: remove default root user
  mysql_user: name='root' host={{ item }} state=absent
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  when: mysql_root_user != 'root'
  tags:
    - mysql
    - configuration

- name: remove anonymous users
  mysql_user: name='' host={{ item }} state=absent
  with_items:
    - "{{ ansible_hostname }}"
    - localhost
  tags:
    - mysql
    - configuration

- name: remove hostname root user
  mysql_user: name='root' host={{ ansible_hostname }} state=absent
  when: ansible_hostname != 'localhost'
  tags:
    - mysql
    - configuration

- name: remove test database
  mysql_db: name=test state=absent
  tags:
    - mysql
    - configuration
